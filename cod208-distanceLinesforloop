import controlP5.*;

ControlP5 cp5;


int radius;
int num = 200;
int threshold = 200;
float distance;
float alpha;

boolean showCircles;

Circle c1;
ArrayList<Circle> particles = new ArrayList<Circle>();



void setup() {
  size(800, 500);
  background(255);


  // Add circles to the arraylist at begining of the app
  for (int i = 0; i < num; i++) {
    c1 = new Circle();
    particles.add(c1);
  }
   cp5 = new ControlP5(this);
  
  // add a horizontal sliders, the value of this slider will be linked
  // to variable 'sliderValue' 
  cp5.addSlider("threshold")
     .setPosition(20,20)
     .setRange(20,40)
     ;
     
     cp5.addSlider("radius")
     .setPosition(20,60)
     .setRange(5,20)
     ;
     
     
     
     cp5.addToggle("showCircles")
     .setPosition(40,250)
     .setSize(50,20)
     .setValue(true)
     .setMode(ControlP5.SWITCH)
     ;
     
}


void draw() {
  background(10, 20, 30);


  // Call every Circle object in the ArrayList and set their positions
  for (int i = 0; i < num; i++) {

    if(showCircles == true) {    
    particles.get(i).updateCircle();
    particles.get(i).radius = radius;
    }
    
    for (int j = 0; j < num; j++) {
      
        distance= dist(particles.get(i).pos.x,
                       particles.get(i).pos.y,
                       particles.get(j).pos.x,
                       particles.get(j).pos.y);
    
      stroke(#ff0000);

    if (i < num -1) {
      distance = dist(particles.get(i).pos.x, // x1
        particles.get(i).pos.y, // y1
        particles.get(j).pos.x, // x2
        particles.get(j).pos.y); // y2


      //println(distance);

      if (distance < threshold) {

        alpha = map(distance, 0, threshold, 255, 0);

        stroke(#ff0000, alpha);

        line(particles.get(i).pos.x, particles.get(i).pos.y, 
          particles.get(j).pos.x, particles.get(j).pos.y);
      }
    }
    
    }

  
  }
}
